{"remainingRequest":"/Users/karl/Documents/GitHub/karl-cli-template/node_modules/babel-loader/lib/index.js!/Users/karl/Documents/GitHub/karl-cli-template/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/karl/Documents/GitHub/karl-cli-template/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/karl/Documents/GitHub/karl-cli-template/src/views/Axios.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/karl/Documents/GitHub/karl-cli-template/src/views/Axios.vue","mtime":1657815735547},{"path":"/Users/karl/Documents/GitHub/karl-cli-template/babel.config.js","mtime":1657778947347},{"path":"/Users/karl/Documents/GitHub/karl-cli-template/node_modules/cache-loader/dist/cjs.js","mtime":1657778943992},{"path":"/Users/karl/Documents/GitHub/karl-cli-template/node_modules/babel-loader/lib/index.js","mtime":1657778944198},{"path":"/Users/karl/Documents/GitHub/karl-cli-template/node_modules/cache-loader/dist/cjs.js","mtime":1657778943992},{"path":"/Users/karl/Documents/GitHub/karl-cli-template/node_modules/vue-loader-v16/dist/index.js","mtime":1657778944196}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgYXBpRXhhbXBsZSB9IGZyb20gJ0AvYXBpL2luZGV4JzsKaW1wb3J0IHsgbWVzc2FnZSB9IGZyb20gJ2FudC1kZXNpZ24tdnVlJzsKaW1wb3J0IHsgRWRpdFR3b1RvbmUsIEluZm9DaXJjbGVPdXRsaW5lZCB9IGZyb20gJ0BhbnQtZGVzaWduL2ljb25zLXZ1ZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQXhpb3MnLAogIGNvbXBvbmVudHM6IHsKICAgIEVkaXRUd29Ub25lLAogICAgSW5mb0NpcmNsZU91dGxpbmVkCiAgfSwKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRhdGE6IFtdLAogICAgICBjb2x1bW5zOiBbewogICAgICAgIHRpdGxlOiAndHlwZScsCiAgICAgICAgZGF0YUluZGV4OiAndHlwZScsCiAgICAgICAgd2lkdGg6IDE1MAogICAgICB9LCB7CiAgICAgICAgdGl0bGU6ICdzYScsCiAgICAgICAgZGF0YUluZGV4OiAnc2EnLAogICAgICAgIHdpZHRoOiAxNTAKICAgICAgfSwgewogICAgICAgIHRpdGxlOiAncScsCiAgICAgICAgZGF0YUluZGV4OiAncScsCiAgICAgICAgd2lkdGg6IDE1MAogICAgICB9XSwKICAgICAgaWZMb2FkaW5nOiBmYWxzZSwKICAgICAgd2Q6ICdjaHJvbWUnLAogICAgICBidG5UZXh0OiAn5Y+R6LW3QXhpb3Por7fmsYInCiAgICB9OwogIH0sCgogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGdldFJlc3VsdCgpIHsKICAgICAgdmFyIF9KU09OJHBhcnNlOwoKICAgICAgY29uc3QgcGFyYW1zID0gewogICAgICAgIHdvcmQ6IHRoaXMud2QKICAgICAgfTsKICAgICAgdGhpcy5pZkxvYWRpbmcgPSB0cnVlOwogICAgICB0aGlzLmJ0blRleHQgPSAn5Y+R6LW36K+35rGC5LitLi4uJzsKICAgICAgY29uc3QgewogICAgICAgIGRhdGEKICAgICAgfSA9IGF3YWl0IGFwaUV4YW1wbGUocGFyYW1zLCB0aGlzLmNhbGxiYWNrKTsKICAgICAgdGhpcy5kYXRhID0gKF9KU09OJHBhcnNlID0gSlNPTi5wYXJzZShkYXRhKSkgPT09IG51bGwgfHwgX0pTT04kcGFyc2UgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9KU09OJHBhcnNlLmc7CiAgICB9LAoKICAgIGNhbGxiYWNrKHN0YXR1cykgewogICAgICAvLyBzdGF0dXM6IOaIkOWKn+i/lOWbnlNVQ0NFU1MsIOWksei0pei/lOWbnkZBSUwKICAgICAgdGhpcy5pZkxvYWRpbmcgPSBmYWxzZTsKICAgICAgdGhpcy5idG5UZXh0ID0gJ+WPkei1t0F4aW9z6K+35rGCJzsKICAgICAgc3RhdHVzID09PSAiU1VDQ0VTUyIgPyBtZXNzYWdlLnN1Y2Nlc3MoJ+ivt+axguaIkOWKnyEnKSA6IG1lc3NhZ2UuZXJyb3IoJ+ivt+axguWksei0pSEnKTsKICAgIH0KCiAgfQp9Ow=="},{"version":3,"mappings":"AAkCA,SAASA,UAAT,QAA2B,aAA3B;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,WAAT,EAAsBC,kBAAtB,QAAgD,uBAAhD;AAEA,eAAe;EACbC,IAAI,EAAE,OADO;EAEbC,UAAU,EAAE;IACVH,WADU;IAEVC;EAFU,CAFC;;EAMbG,IAAI,GAAG;IACL,OAAO;MACLA,IAAI,EAAE,EADD;MAELC,OAAO,EAAE,CAAC;QACNC,KAAK,EAAE,MADD;QAENC,SAAS,EAAE,MAFL;QAGNC,KAAK,EAAE;MAHD,CAAD,EAIL;QACAF,KAAK,EAAE,IADP;QAEAC,SAAS,EAAE,IAFX;QAGAC,KAAK,EAAE;MAHP,CAJK,EAQL;QACAF,KAAK,EAAE,GADP;QAEAC,SAAS,EAAE,GAFX;QAGAC,KAAK,EAAE;MAHP,CARK,CAFJ;MAeLC,SAAS,EAAE,KAfN;MAgBLC,EAAE,EAAE,QAhBC;MAiBLC,OAAO,EAAE;IAjBJ,CAAP;EAmBD,CA1BY;;EA2BbC,OAAO,EAAE;IACP,MAAMC,SAAN,GAAkB;MAAA;;MAChB,MAAMC,MAAK,GAAI;QAAEC,IAAI,EAAE,KAAKL;MAAb,CAAf;MACA,KAAKD,SAAL,GAAiB,IAAjB;MACA,KAAKE,OAAL,GAAe,UAAf;MACA,MAAM;QAAEP;MAAF,IAAW,MAAMN,UAAU,CAACgB,MAAD,EAAS,KAAKE,QAAd,CAAjC;MACA,KAAKZ,IAAL,kBAAYa,IAAI,CAACC,KAAL,CAAWd,IAAX,CAAZ,gDAAY,YAAkBe,CAA9B;IACD,CAPM;;IAQPH,QAAQ,CAACI,MAAD,EAAS;MACf;MACA,KAAKX,SAAL,GAAiB,KAAjB;MACA,KAAKE,OAAL,GAAe,WAAf;MACAS,MAAK,KAAM,SAAX,GAAuBrB,OAAO,CAACsB,OAAR,CAAgB,OAAhB,CAAvB,GAAkDtB,OAAO,CAACuB,KAAR,CAAc,OAAd,CAAlD;IACF;;EAbO;AA3BI,CAAf","names":["apiExample","message","EditTwoTone","InfoCircleOutlined","name","components","data","columns","title","dataIndex","width","ifLoading","wd","btnText","methods","getResult","params","word","callback","JSON","parse","g","status","success","error"],"sourceRoot":"","sources":["/Users/karl/Documents/GitHub/karl-cli-template/src/views/Axios.vue"],"sourcesContent":["<template>\n  <div class=\"axios\">\n    <h1>This is an Ant-Design Page</h1>\n    <div class=\"myInput\">\n      <a-input v-model:value=\"wd\" placeholder=\"Basic usage\">\n        <template #prefix>\n          <edit-two-tone />\n        </template>\n        <template #suffix>\n          <a-tooltip title=\"百度引擎搜索\">\n            <info-circle-outlined style=\"color: rgba(0, 0, 0, 0.45)\" />\n          </a-tooltip>\n        </template>\n      </a-input>\n    </div>\n\n    <a-button type=\"primary\" \n    :loading=\"ifLoading\" \n    @click=\"getResult\">\n      {{ btnText }}\n    </a-button>\n    <div class=\"myTable\">\n      <a-table\n        bordered\n        :columns=\"columns\"\n        :data-source=\"data\"\n        :scroll=\"{ y: 240 }\"\n        :row-class-name=\"(_record, index) => (index % 2 === 1 ? 'table-striped' : null)\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { apiExample } from '@/api/index';\nimport { message } from 'ant-design-vue';\nimport { EditTwoTone, InfoCircleOutlined } from '@ant-design/icons-vue';\n\nexport default {\n  name: 'Axios',\n  components: {\n    EditTwoTone,\n    InfoCircleOutlined,\n  },\n  data() {\n    return {\n      data: [],\n      columns: [{\n          title: 'type',\n          dataIndex: 'type',\n          width: 150,\n        },{\n          title: 'sa',\n          dataIndex: 'sa',\n          width: 150,\n        },{\n          title: 'q',\n          dataIndex: 'q',\n          width: 150\n      }],\n      ifLoading: false,\n      wd: 'chrome',\n      btnText: '发起Axios请求'\n    }\n  },\n  methods: {\n    async getResult() {\n      const params = { word: this.wd };\n      this.ifLoading = true;\n      this.btnText = '发起请求中...'\n      const { data } = await apiExample(params, this.callback);\n      this.data = JSON.parse(data)?.g;\n    },\n    callback(status) {\n      // status: 成功返回SUCCESS, 失败返回FAIL\n      this.ifLoading = false;\n      this.btnText = '发起Axios请求';\n      status === \"SUCCESS\" ? message.success('请求成功!') : message.error('请求失败!');\n    }\n  }\n}\n</script>\n\n<style scoped>\n.myInput {\n  margin: 10px auto;\n  width: 50%;\n}\n\n.myTable {\n  width: 50%;\n  margin: 20px auto;\n}\n\n.myTable :deep(.ant-table tbody tr.table-striped){\n  background-color: #fafafa;\n}\n</style>"]}]}
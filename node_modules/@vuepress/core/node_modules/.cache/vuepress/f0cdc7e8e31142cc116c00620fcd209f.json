{"remainingRequest":"/Users/karl/Documents/vuePress/chrome_plugins_doc/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/karl/Documents/vuePress/chrome_plugins_doc/docs/.vuepress/components/Emoji.vue?vue&type=style&index=0&id=1d23a10e&prod&scoped=true&lang=css&","dependencies":[{"path":"/Users/karl/Documents/vuePress/chrome_plugins_doc/docs/.vuepress/components/Emoji.vue","mtime":1657071661929},{"path":"/Users/karl/Documents/vuePress/chrome_plugins_doc/node_modules/css-loader/dist/cjs.js","mtime":1656726765625},{"path":"/Users/karl/Documents/vuePress/chrome_plugins_doc/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1656726765969},{"path":"/Users/karl/Documents/vuePress/chrome_plugins_doc/node_modules/postcss-loader/src/index.js","mtime":1656726765625},{"path":"/Users/karl/Documents/vuePress/chrome_plugins_doc/node_modules/cache-loader/dist/cjs.js","mtime":1656726765554},{"path":"/Users/karl/Documents/vuePress/chrome_plugins_doc/node_modules/vue-loader/lib/index.js","mtime":1656726765926}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CnRkOmhvdmVyIHsKICBjdXJzb3I6IHBvaW50ZXI7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAuMSk7Cn0K"},{"version":3,"sources":["Emoji.vue"],"names":[],"mappings":";AAqDA;AACA;AACA;AACA","file":"Emoji.vue","sourceRoot":"docs/.vuepress/components","sourcesContent":["<template>\n  <div class=\"emoji\">\n    <table>\n      <tbody>\n        <tr v-for=\"tr in currentData\" :key=\"tr.id\">\n          <td v-for=\"td in tr.row\" \n            :key=\"td.id\" \n            :title=\"td.key\"\n            :style=\"{ fontSize: fontSise }\">{{ td.value }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport * as emoji from '../public/js/emoji.js';\nimport os from '../public/js/device.js';\n\nexport default {\n  props: {\n    type: {\n      default: '',\n      type: String,\n      require: true\n    }\n  },\n  mounted() {\n    const { isPhone, isAndroid } = os();\n    let rowNum = 10;\n    if (isAndroid || isPhone) {\n      rowNum = 5;\n      this.fontSise = '1.3rem';\n    }\n    const data = emoji[this.type], temp = [];\n    let cnt = 0\n    for (let key in data) {\n      const idx = Math.floor(cnt / rowNum);\n      if (!(cnt % rowNum)) temp.push({ id: idx, row: [{ id: cnt++, key, value: data[key] }] });\n      else temp[idx].row.push({ id: cnt++, key, value: data[key] });\n    }\n    this.currentData = temp;\n  },\n  data() {\n    return {\n      fontSise: '1.5rem',\n      currentData: []\n    }\n  }\n}\n</script>\n\n<style scoped>\ntd:hover {\n  cursor: pointer;\n  background-color: rgba(0, 0, 0, .1);\n}\n</style>"]}]}
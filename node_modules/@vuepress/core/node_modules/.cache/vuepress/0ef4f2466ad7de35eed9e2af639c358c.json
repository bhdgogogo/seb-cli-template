{"remainingRequest":"/Users/karl/Documents/vuePress/chrome_plugins_doc/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/karl/Documents/vuePress/chrome_plugins_doc/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/karl/Documents/vuePress/chrome_plugins_doc/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/karl/Documents/vuePress/chrome_plugins_doc/docs/.vuepress/components/Emoji.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/karl/Documents/vuePress/chrome_plugins_doc/docs/.vuepress/components/Emoji.vue","mtime":1657116221951},{"path":"/Users/karl/Documents/vuePress/chrome_plugins_doc/node_modules/cache-loader/dist/cjs.js","mtime":1656726765554},{"path":"/Users/karl/Documents/vuePress/chrome_plugins_doc/node_modules/babel-loader/lib/index.js","mtime":1656726765625},{"path":"/Users/karl/Documents/vuePress/chrome_plugins_doc/node_modules/cache-loader/dist/cjs.js","mtime":1656726765554},{"path":"/Users/karl/Documents/vuePress/chrome_plugins_doc/node_modules/vue-loader/lib/index.js","mtime":1656726765926}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgZW1vamkgZnJvbSAnLi4vcHVibGljL2pzL2Vtb2ppLmpzJzsKaW1wb3J0IGhhc2hUYWJsZSBmcm9tICcuLi9wdWJsaWMvanMvaGFzaFRhYmxlLmpzJzsKaW1wb3J0IG9zIGZyb20gJy4uL3B1YmxpYy9qcy9kZXZpY2UuanMnOwpleHBvcnQgZGVmYXVsdCB7CiAgbW91bnRlZCgpIHsKICAgIHRoaXMuaW5pdCgpOwogICAgdGhpcy5pbnRlclNlY3Rpb25PYnNlcnZlciA9IG5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcih0aGlzLmhhbmRsZXIsIHRoaXMub3B0aW9ucyk7CiAgfSwKCiAgdXBkYXRlZCgpIHsKICAgIGNvbnN0IGVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLmhvb2tUaXRsZSk7CiAgICB0aGlzLmludGVyU2VjdGlvbk9ic2VydmVyLm9ic2VydmUoZWwpOwogIH0sCgogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICByb2NrZXRGbGFnOiBmYWxzZSwKICAgICAgaW5pdExpbmVzOiA1LAogICAgICBtb3JlTGluZXM6IDMsCiAgICAgIGhvb2tJZHg6IDMsCiAgICAgIC8vIOW8gOWni+WHuueOsPCfmoDnmoTmoIfpopjluo/lj7cgCiAgICAgIGZvbnRTaXNlOiAnMS41cmVtJywKICAgICAgZW1vamlDb2RlOiAnJywKICAgICAgdGV4dGFyZWFDb2RlOiAnJywKICAgICAgaG9va1RpdGxlOiAnJywKICAgICAgZGF0YXNldDogW10sCiAgICAgIGVtb2ppU2V0OiB7CiAgICAgICAgcGVvcGxlOiAn56yR6IS45LiO5Lq654mpJywKICAgICAgICB3aWxkbGlmZTogJ+mHjueUn+WKqOakjeeJqScsCiAgICAgICAgZm9vZDogJ+mjn+eJqScsCiAgICAgICAgY2xvdGhlczogJ+acjemlsOS4jumlsOWTgScsCiAgICAgICAgdGhpbmdzOiAn54mp5ZOBJywKICAgICAgICBidWlsZGluZzogJ+W7uuetkeeJqScsCiAgICAgICAgdHJhbnNwb3J0OiAn5Lqk6YCa5bel5YW3JywKICAgICAgICB3ZWF0aGVyOiAn5pe26Ze05LiO5aSp5rCUJywKICAgICAgICBzeW1ib2xzOiAn56ym5Y+35qCH5b+XJywKICAgICAgICBmbGFnOiAn5Zu95peX5LiO5peX5bicJwogICAgICB9LAogICAgICBoYXNoVGFibGUsCiAgICAgIHNob3dMaW5lczoge30sCiAgICAgIG9wdGlvbnM6IHsKICAgICAgICB0aHJlc2hvbGQ6IDAKICAgICAgfSwKICAgICAgaW50ZXJTZWN0aW9uT2JzZXJ2ZXI6IG51bGwKICAgIH07CiAgfSwKCiAgbWV0aG9kczogewogICAgaW5pdCgpIHsKICAgICAgY29uc3QgewogICAgICAgIGlzUGhvbmUsCiAgICAgICAgaXNBbmRyb2lkCiAgICAgIH0gPSBvcygpLAogICAgICAgICAgICBlbW9qaVNldCA9IHRoaXMuZW1vamlTZXQsCiAgICAgICAgICAgIGluaXRMaW5lcyA9IHRoaXMuaW5pdExpbmVzOwogICAgICBsZXQgcm93TnVtID0gMTA7CgogICAgICBpZiAoaXNBbmRyb2lkIHx8IGlzUGhvbmUpIHsKICAgICAgICByb3dOdW0gPSA1OwogICAgICAgIHRoaXMuZm9udFNpc2UgPSAnMS4zcmVtJzsKICAgICAgfQoKICAgICAgZm9yIChsZXQgdHlwZSBpbiBlbW9qaVNldCkgewogICAgICAgIGNvbnN0IGRhdGEgPSBlbW9qaVt0eXBlXSwKICAgICAgICAgICAgICB0ZW1wID0gewogICAgICAgICAgdGl0bGU6IGVtb2ppU2V0W3R5cGVdLAogICAgICAgICAgZW46IHR5cGUsCiAgICAgICAgICB0YWJsZTogW10sCiAgICAgICAgICBjb3B5VGFibGU6IFtdCiAgICAgICAgfTsKICAgICAgICB0aGlzLnNob3dMaW5lc1t0eXBlXSA9IGluaXRMaW5lczsKICAgICAgICBsZXQgY250ID0gMDsKCiAgICAgICAgZm9yIChsZXQga2V5IGluIGRhdGEpIHsKICAgICAgICAgIGNvbnN0IGlkeCA9IE1hdGguZmxvb3IoY250IC8gcm93TnVtKTsKICAgICAgICAgIGlmICghKGNudCAlIHJvd051bSkpIHRlbXAudGFibGUucHVzaCh7CiAgICAgICAgICAgIGlkOiBpZHgsCiAgICAgICAgICAgIHJvdzogW3sKICAgICAgICAgICAgICBpZDogY250KyssCiAgICAgICAgICAgICAga2V5LAogICAgICAgICAgICAgIHZhbHVlOiBkYXRhW2tleV0KICAgICAgICAgICAgfV0KICAgICAgICAgIH0pO2Vsc2UgdGVtcC50YWJsZVtpZHhdLnJvdy5wdXNoKHsKICAgICAgICAgICAgaWQ6IGNudCsrLAogICAgICAgICAgICBrZXksCiAgICAgICAgICAgIHZhbHVlOiBkYXRhW2tleV0KICAgICAgICAgIH0pOwogICAgICAgIH0KCiAgICAgICAgdGVtcC5jb3B5VGFibGUgPSB0ZW1wLnRhYmxlLnNsaWNlKDAsIGluaXRMaW5lcyk7CiAgICAgICAgdGhpcy5kYXRhc2V0LnB1c2godGVtcCk7CiAgICAgIH0KCiAgICAgIHRoaXMuaG9va1RpdGxlID0gYCMke3RoaXMuZGF0YXNldFt0aGlzLmhvb2tJZHggLSAxXS50aXRsZX1gOwogICAgfSwKCiAgICBoYW5kbGVyKGVudHJpZXMpIHsKICAgICAgY29uc3Qgd2luSGVpZ2h0ID0gd2luZG93LnNjcmVlbi5hdmFpbEhlaWdodDsKICAgICAgY29uc3QgewogICAgICAgIGJvdW5kaW5nQ2xpZW50UmVjdDogewogICAgICAgICAgYm90dG9tCiAgICAgICAgfSwKICAgICAgICBpc0ludGVyc2VjdGluZwogICAgICB9ID0gZW50cmllc1swXTsgLy8g5LuO5bGP5bmV5LiL5pa55Ye6546wCgogICAgICBpZiAoaXNJbnRlcnNlY3RpbmcgJiYgYm90dG9tID4gMTAwICYmIGJvdHRvbSA8IHdpbkhlaWdodCkgewogICAgICAgIHRoaXMucm9ja2V0RmxhZyA9IHRydWU7CiAgICAgIH0gLy8g5LuO5bGP5bmV5LiL5pa55raI5aSxCiAgICAgIGVsc2UgaWYgKCFpc0ludGVyc2VjdGluZyAmJiBib3R0b20gPiAwICYmIGJvdHRvbSA+PSB3aW5IZWlnaHQgLSAxMDApIHsKICAgICAgICB0aGlzLnJvY2tldEZsYWcgPSBmYWxzZTsKICAgICAgfQogICAgfSwKCiAgICBzaG93TW9yZShlKSB7CiAgICAgIGNvbnN0IHsKICAgICAgICB0aXRsZUVuOiB0aXRsZSwKICAgICAgICBpZHgKICAgICAgfSA9IGUudGFyZ2V0LmRhdGFzZXQsCiAgICAgICAgICAgIGN1cnJMaW5lID0gdGhpcy5zaG93TGluZXNbdGl0bGVdLAogICAgICAgICAgICBhbGxMZW4gPSB0aGlzLmRhdGFzZXRbaWR4XS50YWJsZS5sZW5ndGg7CiAgICAgIGxldCB0ZW1wID0gY3VyckxpbmUgKyB0aGlzLm1vcmVMaW5lczsKICAgICAgdGVtcCA9IHRlbXAgPj0gYWxsTGVuID8gYWxsTGVuIDogdGVtcDsKCiAgICAgIGlmICh0ZW1wID49IGFsbExlbikgewogICAgICAgIGNvbnN0IHNwYW4gPSB0aGlzLiRyZWZzLmZvb3RlcltpZHhdOwogICAgICAgIHNwYW4uaW5uZXJUZXh0ID0gIuayoeacieabtOWkmuS6hiI7CiAgICAgICAgc3Bhbi5jbGFzc0xpc3QuYWRkKCJkaXNhYmxlZCIpOwogICAgICAgIHRoaXMuc2hvd0xpbmVzW3RpdGxlXSA9IGFsbExlbjsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnNob3dMaW5lc1t0aXRsZV0gPSB0ZW1wOwogICAgICB9CgogICAgICB0aGlzLmRhdGFzZXRbaWR4XS5jb3B5VGFibGUgPSB0aGlzLmRhdGFzZXRbaWR4XS50YWJsZS5zbGljZSgwLCB0ZW1wKTsKICAgIH0sCgogICAgY29weUNvZGUoZSkgewogICAgICBjb25zdCBlbCA9IGUudGFyZ2V0LAogICAgICAgICAgICBjb2RlID0gYDoke2VsLnRpdGxlfTpgLAogICAgICAgICAgICBjb3B5Rm4gPSBuYXZpZ2F0b3IuY2xpcGJvYXJkOwoKICAgICAgZnVuY3Rpb24gY2FsbGJhY2soKSB7CiAgICAgICAgZWwuY2xhc3NMaXN0LnJlbW92ZSgiY29weSIpOwogICAgICAgIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoImFuaW1hdGlvbmVuZCIsIGNhbGxiYWNrKTsKICAgICAgfQoKICAgICAgY29weUZuICYmIGNvcHlGbi53cml0ZVRleHQoY29kZSk7CgogICAgICBpZiAoIWNvcHlGbikgewogICAgICAgIGNvbnN0IHRleHRhcmVhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGV4dGFyZWEnKTsKICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRleHRhcmVhKTsKICAgICAgICB0ZXh0YXJlYS5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSc7CiAgICAgICAgdGV4dGFyZWEudmFsdWUgPSBjb2RlOwogICAgICAgIHRleHRhcmVhLnNlbGVjdCgpOwogICAgICAgIGRvY3VtZW50LmV4ZWNDb21tYW5kKCdjb3B5JywgdHJ1ZSk7CiAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZCh0ZXh0YXJlYSk7CiAgICAgIH0KCiAgICAgIGVsLmNsYXNzTGlzdC5hZGQoImNvcHkiKTsKICAgICAgZWwuYWRkRXZlbnRMaXN0ZW5lcigiYW5pbWF0aW9uZW5kIiwgY2FsbGJhY2spOwogICAgfSwKCiAgICBnZXRFbW9qaShlKSB7CiAgICAgIGxldCBzdHIgPSAnJzsKICAgICAgY29uc3QgY29kZXMgPSBlLnRhcmdldC52YWx1ZS5tYXRjaCgvKDpcdys6KS9nKTsKICAgICAgY29kZXMgJiYgY29kZXMuZm9yRWFjaChpdGVtID0+IHN0ciArPSB0aGlzLmNvZGUyVW5pY29kZShpdGVtKSk7CiAgICAgIHRoaXMudGV4dGFyZWFDb2RlID0gc3RyOwogICAgfSwKCiAgICBjb2RlMlVuaWNvZGUoY29kZSkgewogICAgICByZXR1cm4gdGhpcy5oYXNoVGFibGVbY29kZS5zbGljZSgxLCAtMSldOwogICAgfSwKCiAgICBzdGVwKCkgewogICAgICBjb25zdCBjdXJyVG9wID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCAtIDUwOwogICAgICB3aW5kb3cuc2Nyb2xsVG8oMCwgY3VyclRvcCk7CiAgICAgIGN1cnJUb3AgPj0gMCA/IHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5zdGVwKSA6IHdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZSh0aGlzLnN0ZXApOwogICAgfSwKCiAgICByb2NrZXQoKSB7CiAgICAgIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5zdGVwKTsKICAgIH0KCiAgfQp9Ow=="},null]}